name: Rust

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Cache Nix store
        uses: actions/cache@v4
        with:
          path: /nix/store
          key: nix-${{ runner.os }}-${{ hashFiles('flake.lock') }}
          restore-keys: |
            nix-${{ runner.os }}-

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Enter Nix dev shell and build
        run: nix develop --command cargo build --verbose

      - name: Check code formatting
        run: nix develop --command cargo fmt -- --check
        continue-on-error: true

      - name: Run Clippy for linting
        run: nix develop --command cargo clippy --all-targets --all-features -- -D warnings
        continue-on-error: true

      - name: Enter Nix dev shell and run tests
        run: nix develop --command cargo test --verbose
